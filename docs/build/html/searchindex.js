Search.setIndex({"docnames": ["Deembedding", "Examples", "Installation", "Introduction", "TOMAS", "Touchstone", "Tutorials", "backup", "index", "modules", "pyRFtk"], "filenames": ["Deembedding.rst", "Examples.rst", "Installation.rst", "Introduction.rst", "TOMAS.rst", "Touchstone.rst", "Tutorials.rst", "backup.rst", "index.rst", "modules.rst", "pyRFtk.rst"], "titles": ["Deembedding", "Examples", "Installation", "Introduction", "TOMAS ICRH matching", "Touchstone files", "Tutorials", "S-matrix and combining circuits", "Welcome to pyRFtk\u2019s documentation!", "pyRFtk", "pyRFtk package"], "terms": {"As": [3, 4, 7], "full": [3, 4, 10], "project": [2, 4, 8], "exampl": [4, 7, 8], "we": [3, 4, 5, 7], "ll": [2, 3, 4, 5], "now": [3, 4], "us": [2, 3, 4, 5, 7, 8, 10], "thi": [2, 3, 4, 5, 7, 8, 10], "code": [2, 3, 4, 7, 10], "test": 4, "algorithm": 4, "implement": [3, 4, 10], "antenna": [4, 5], "model": [4, 10], "diagram": [4, 5], "how": [3, 4, 10], "i": [0, 2, 3, 4, 5, 7, 8, 10], "connect": [3, 4, 5, 7, 9, 10], "shown": [3, 4, 5, 10], "below": [3, 4, 5, 7], "To": [3, 4, 5], "can": [2, 3, 4, 5, 7, 8, 10], "make": [3, 4, 5, 7], "": [3, 4, 5, 10], "touchston": [4, 6, 8, 10], "file": [2, 4, 6, 8, 10], "python": [2, 8], "librari": 8, "which": [2, 3, 5, 7, 8, 10], "build": [2, 3, 8, 10], "analys": 8, "rf": [3, 8, 10], "circuit": [3, 5, 8, 9], "wa": [], "origin": 10, "design": [], "icrh": [1, 5, 8], "made": [2, 10], "wide": [], "deploy": [], "under": 8, "activ": 8, "develop": 8, "usag": [], "instal": [6, 8], "max": [], "voltag": [3, 10], "f": [3, 5, 7, 10], "o": [], "distanc": 3, "matrix": [3, 5, 10], "multipl": 10, "port": [3, 5, 10], "log": 10, "toma": [1, 5, 8], "match": [1, 5, 8, 10], "index": 8, "modul": [8, 9], "search": [8, 10], "page": 8, "packag": 9, "submodul": 9, "convertgener": 9, "readdictdata": 9, "readdictstr": [9, 10], "readtsf": 9, "s_from_vi": 9, "s_from_i": 9, "s_from_z": 9, "y_from_": 9, "z_from_": 9, "get_internalsmatrix": [9, 10], "solut": [9, 10], "addblock": [3, 5, 7, 9, 10], "copi": [9, 10], "ext": [9, 10], "get": [3, 7, 9, 10], "listblock": [9, 10], "maxv": [3, 7, 9, 10], "set": [3, 9, 10], "solv": [0, 3, 9, 10], "termin": [3, 5, 7, 9, 10], "codebas": 9, "list1dir": [9, 10], "comparess": 9, "config": [7, 9], "cleanuplogfil": [9, 10], "fscale": [9, 10], "get_class_that_defined_method": [9, 10], "ident": [9, 10], "logid": [9, 10], "setloglevel": [7, 9, 10], "findpath": 9, "existspath": [9, 10], "getlin": 9, "maxfun": 9, "plotvsw": [3, 5, 7, 9], "scalevsw": [9, 10], "strvsw": [9, 10], "printmatric": [7, 9], "printdb": [9, 10], "printm": [9, 10], "printma": [7, 9, 10], "printr": [9, 10], "printri": [9, 10], "strm": [9, 10], "resolvetlparam": 9, "tlresolv": [9, 10], "rf3dbhybrid": 9, "get1": [9, 10], "rfarcobj": 9, "rfbase": 9, "add_debug_cod": [9, 10], "asstr": [9, 10], "tsf2str": [9, 10], "write_tsf": [9, 10], "rfcircuit": [0, 3, 5, 7, 9], "deemb": [0, 9, 10], "findobj": [9, 10], "getpo": [9, 10], "resolve_xpo": [9, 10], "rfgtl": 9, "processgtl": [9, 10], "getsgtl": [9, 10], "rfobject": [5, 9], "convert2newzbas": [9, 10], "process_kwarg": [9, 10], "read_tsf": [9, 10], "sortport": [9, 10], "rfrlc": [3, 5, 9], "rftrl": [3, 5, 7, 9], "visw": [9, 10], "solvevi": [9, 10], "str_dict": 9, "tictoc": 9, "tic": [9, 10], "toc": [9, 10], "whoami": 9, "content": 9, "arnold": 10, "law": 10, "document": 10, "If": [2, 10], "should": [3, 10], "exist": 10, "doesn": 10, "t": [3, 10], "doe": 10, "out": [5, 10], "date": 10, "onli": [3, 10], "useless": 10, "program": [2, 3, 7, 10], "transcend": 10, "first": [2, 3, 10], "two": [7, 10], "creat": [3, 5, 7, 10], "18": 10, "dec": 10, "2020": 10, "author": 10, "freder": 10, "z2": 10, "s1": 10, "z1": 10, "type1": 10, "v": 10, "type2": 10, "covertgener": 10, "convert": 10, "an": [2, 3, 7, 8, 10], "arrai": [3, 10], "n": 10, "frequenc": [3, 7, 10], "scatter": 10, "matric": [7, 10], "imped": [3, 10], "scalar": 10, "all": [3, 10], "ar": [3, 7, 8, 10], "same": [3, 10], "1d": 10, "list": 10, "length": [3, 7, 10], "must": 10, "correspond": 10, "number": 10, "have": [2, 3, 5, 10], "differ": 10, "2d": 10, "shape": 10, "nf": 10, "np": 10, "input": [3, 7, 10], "matri": 10, "x": 10, "ce": 10, "nfreq": 10, "1": [3, 5, 7, 10], "nport": 10, "3d": 10, "type": 10, "p": [3, 10], "power": 10, "wave": [3, 7, 10], "zk": 10, "imag": 10, "0": [2, 3, 5, 7, 10], "ak": 10, "vk": 10, "ik": 10, "2": [2, 3, 7, 10], "5": [7, 10], "bk": 10, "wavezk": 10, "g": [2, 5, 7, 10], "gener": 10, "orfanidi": 10, "real": 10, "s2": 10, "return": 10, "valu": [3, 10], "ha": [2, 7, 10], "read": [7, 10], "text": 10, "fact": 10, "dict": 10, "comment": 10, "strip": 10, "durodi": 10, "11": 10, "apr": 10, "2014": 10, "2015": 10, "aug": 10, "26": 10, "call": [3, 10], "signatur": 10, "compat": 10, "new": 10, "fpath": 10, "userdir": 10, "envvar": 10, "appdir": 10, "missingok": 10, "true": 10, "verbos": 10, "fals": 10, "repres": [3, 10], "mod4pj": 10, "ciamod": 10, "object": [0, 3, 10], "src": [2, 10], "kwarg": [3, 10], "version": [2, 10], "special": 10, "str": 10, "part": [3, 10], "top": 10, "bottom": 10, "left": [7, 10], "right": [7, 10], "tupl": 10, "int": 10, "up": 10, "down": 10, "rem": 10, "marker": 10, "17": 10, "feb": 10, "2021": 10, "m": 10, "z0": 10, "30": 10, "refer": [3, 10], "imed": 10, "from": [3, 5, 7, 10], "vi": 10, "transform": 10, "i2": 10, "v2": 10, "v1": 10, "i1": 10, "note": [3, 10], "defin": 10, "oposit": 10, "sign": 10, "abov": 10, "e": [2, 3, 5, 7, 10], "standard": 10, "y": [3, 10], "zbase": [3, 10], "50": [3, 10], "ohm": [3, 10], "admitt": [3, 10], "alwai": 10, "numpi": [2, 10], "ndarrai": 10, "unless": 10, "z": [3, 5, 10], "10": [3, 10], "class": [5, 10], "manipul": 10, "follow": [2, 3, 10], "method": 10, "attribut": 10, "float": 10, "string": 10, "__len__": 10, "integ": 10, "hz": 10, "param": 10, "output": [3, 7, 10], "smatric": 10, "singl": 10, "smatrix": 10, "result": [0, 10], "given": [3, 7, 10], "els": 10, "default": 10, "arg": 10, "name": [3, 7, 10], "rfobj": 10, "complex": [7, 10], "rc": [7, 10], "unus": 10, "automat": 10, "becom": 10, "extern": 10, "todo": 10, "renam": 10, "order": 10, "request": 10, "rethink": 10, "paramet": 10, "check": 10, "logic": 10, "statu": 10, "snp": 10, "avail": [2, 10], "base": 10, "node": [3, 10], "none": [2, 10], "intern": 10, "try": 10, "find": [0, 10], "self": 10, "flag": 10, "vf": 10, "vr": 10, "pair": 10, "excit": [7, 10], "fequenc": 10, "where": [2, 3, 7, 10], "its": 10, "current": 10, "flow": 10, "forward": 10, "reflect": 10, "quantiti": 10, "express": 10, "one": [3, 10], "id": [3, 5, 7, 10], "ad": [2, 10], "block": [3, 10], "minim": 10, "map": 10, "pf": 10, "portnam": 10, "ommit": 10, "suppli": 10, "xpo": 10, "rel": [2, 10], "posit": 10, "lenght": [7, 10], "well": 10, "yet": [2, 10], "state": 10, "after": 10, "recurs": 10, "fill": 10, "futur": 10, "extesns": 10, "like": [3, 10], "nov": 10, "path": [2, 10], "level": 10, "ss": 10, "c": [3, 5, 7, 10], "lbl": 10, "figkwarg": 10, "20": 10, "frm": 10, "meth": 10, "messag": 10, "d": [5, 10], "printarg": 10, "stacklev": 10, "gmail": 10, "com": 10, "filepath": 10, "more": 10, "predict": 10, "restrict": 10, "manner": 10, "27": 10, "second": 10, "argument": [3, 10], "allow": 10, "partial": 10, "keep": 10, "former": 10, "fpattern": 10, "modifi": [2, 10], "rais": 10, "except": 10, "just": [3, 10], "empti": 10, "envar": 10, "basenam": 10, "environ": 10, "variabl": 10, "separ": 10, "directori": 10, "appear": 10, "usersdir": 10, "next": 10, "final": 10, "do": [3, 10], "ioerror": 10, "when": 10, "print": [7, 10], "debug": [7, 10], "vsw": [3, 7, 10], "maxlev": 10, "4": [7, 10], "scale": 10, "indent": 10, "23": 10, "jul": 10, "telenet": 10, "function": 10, "format": [7, 10], "pfmt": 10, "7": 10, "3f": 10, "1f": 10, "printzero": 10, "pretti": 10, "3fj": 10, "pfun": 10, "lambda": 10, "write": 10, "8": 10, "5f": 10, "2f": 10, "r": [3, 5, 10], "possibli": 10, "func": 10, "parent": 10, "__init__": 10, "__copy__": 10, "__deepcopy__": 10, "__getstate__": 10, "__setstate__": 10, "__str__": 10, "present": 10, "multilin": 10, "represent": 10, "data": [3, 10], "collect": 10, "tfmt": 10, "mhz": 10, "ma": 10, "zref": 10, "overrul": 10, "tsbasenam": 10, "evalu": 10, "whole": [3, 10], "anywai": 10, "subblock": 10, "so": 10, "mai": [3, 10], "than": 10, "relpo": [3, 5, 7, 10], "intport": [0, 10], "extport": [0, 10], "size": 10, "port_new": 10, "through": 10, "sintern": [0, 10], "explicitli": 10, "known": [0, 10], "sextern": 0, "se": 0, "sd": 0, "si": 0, "dpi": 0, "ip": 0, "dpe": 0, "ep": 0, "The": [0, 2, 3, 7, 8, 10], "locat": [2, 10], "extens": 10, "tri": 10, "underli": 10, "inform": 10, "blkid": 10, "sdict": 10, "similar": 10, "goe": 10, "further": 10, "chain": 10, "nest": 10, "attr": 10, "rfcircuita": 10, "rfrlc1": 10, "l": [3, 5, 7, 10], "rfcircuitb": 10, "rftrl1": 10, "20e": 10, "9": 10, "sol": 10, "fmhz": 10, "gtl_data": 10, "gtl": 10, "structur": [3, 10], "provid": 10, "option": 10, "p1": 10, "some": 10, "substitut": 10, "addblockgtl": 10, "tlid1": 10, "tl": [3, 10], "section": [3, 10], "ct": [3, 5, 10], "1st": 10, "general_tl": 10, "properti": 10, "tlidn": 10, "tlid": 10, "path2model": 10, "objkei": 10, "templat": 10, "obsolet": 10, "purpos": 10, "glorifi": 10, "lut": 10, "creation": 10, "done": 10, "sever": 10, "simplest": 10, "load": [5, 10], "produc": 10, "ansi": 10, "hfss": 10, "myobject": 10, "path_to_touchston": 10, "anoth": 10, "tabl": 10, "manual": 10, "fhz": 10, "calcul": [7, 10], "onc": 10, "main": 10, "port1": 10, "a1": 10, "vamx": 10, "newzbas": 10, "convert_zbas": 10, "target": 10, "simpl": [3, 10], "lossless": 10, "characterist": [3, 10], "contain": [3, 10], "deembed": [6, 8, 10], "either": 10, "give": [3, 7, 10], "assum": 10, "being": [3, 10], "pass": 10, "mean": [3, 10], "kw": 10, "slot": 10, "wrapper": 10, "__lt__": 10, "mar": 10, "cp": [3, 5, 10], "lp": [3, 10], "rp": [3, 10], "gnd": 10, "parallel": [3, 10], "resist": [3, 10], "inf": [3, 10], "induct": [3, 10], "h": [3, 5, 10], "capac": [3, 10], "seri": [3, 10], "thu": [3, 10], "16": [], "identifi": 10, "could": 10, "error": 10, "warn": 10, "side": [3, 10], "total": 10, "dx": [3, 5, 10], "72": 10, "dimension": [3, 10], "step": [3, 10], "along": [3, 10], "axi": 10, "telegraphist": [3, 10], "od": [3, 5, 10], "stand": [3, 10], "intiti": 10, "estim": 10, "nth": 10, "wavelength": 10, "transmiss": [3, 7, 10], "line": [3, 7, 10], "taken": 10, "initi": 10, "refin": 10, "fit": 10, "end": [3, 10], "point": [3, 10], "necessari": 10, "odeparam": 10, "rtol": 10, "1e": 10, "12": [3, 10], "atol": 10, "figur": 10, "constant": 10, "split": 10, "len": 10, "segment": 10, "piec": 10, "wise": 10, "linear": 10, "vari": 10, "paramt": 10, "continu": 10, "A": [5, 7, 10], "long": 10, "treat": 10, "need": [3, 10], "start": [3, 10], "boundari": 10, "linarli": 10, "interpol": 10, "extrapol": 10, "nearest": 10, "case": 10, "In": [3, 10], "ani": [2, 8, 10], "invok": 10, "solver": 10, "equat": 10, "otherwis": 10, "propag": 10, "deriv": 10, "form": 10, "global": 10, "z0tl": [3, 10], "ltl": 10, "ctl": 10, "capacit": 10, "rtl": 10, "rtlo": 10, "outer": [3, 10], "conductor": 10, "rtli": 10, "inner": [3, 10], "mho": 10, "medium": 10, "conduct": 10, "attenu": 10, "adb": 10, "db": 10, "rho": [7, 10], "specif": 10, "rhoo": 10, "rhoi": 10, "muro": 10, "mu0": 10, "permeabl": 10, "muri": 10, "properi": 10, "sigma": 10, "tand": 10, "dielectr": 10, "loss": 10, "tangent": 10, "epsr": 10, "epsilon0": 10, "permit": 10, "mur": 10, "etar": 10, "eta0": 10, "c0": 10, "veloc": 10, "geometr": 10, "diamet": [3, 10], "circular": 10, "coaxial": 10, "qtl": 10, "w": 10, "qtlo": 10, "qtli": 10, "perform": 10, "nice": 10, "describ": 10, "mandatori": 10, "expand": 10, "remov": 10, "condit": 10, "v0": 10, "i0": 10, "depend": [6, 8, 10], "see": 10, "prior": 10, "scipi": [2, 10], "integr": 10, "odeint": 10, "atribut": 10, "non": 10, "correctli": 10, "telegraph": 10, "sink": 10, "sourc": [3, 5, 6, 8, 10], "would": 10, "u": 10, "14": 10, "adict": 10, "t0": 10, "pname": 10, "dframe": 10, "you": [2, 3], "move": [], "folder": 2, "dist": 2, "run": [2, 3], "venv": 2, "pip": [6, 8], "pyrftk2": 2, "py3": 2, "whl": 2, "look": 3, "explain": 3, "import": [3, 5, 7], "matplotlib": [2, 3, 7], "pyplot": [3, 7], "plt": [3, 7], "pyrftk": [2, 3, 5, 7], "trl1": [3, 7], "230": 3, "100": 3, "130": 3, "360": 3, "conic": 3, "trl2": [3, 7], "40": 3, "trl3": [3, 7], "fun": 3, "rlc2": 3, "100e": 3, "tl1": [3, 5, 7], "tl2": [3, 5, 7], "tl3": [3, 5, 7], "cap": 3, "oc": 3, "open": [3, 8, 10], "finit": 3, "55e6": 3, "show": [3, 7], "radio": 3, "seen": [3, 7], "definit": 3, "specifi": [3, 10], "leftmost": 3, "rightmost": 3, "13": 3, "here": [3, 7, 10], "capacitor": 3, "our": 3, "time": 3, "put": 3, "them": 3, "togeth": [3, 7], "instanc": 3, "add": [2, 3, 10], "label": 3, "both": 3, "alreadi": 3, "itself": 3, "afterward": 3, "place": 3, "1m": 3, "awai": 3, "These": 3, "proce": 3, "leav": [3, 10], "righthand": 3, "zero": 3, "appli": 3, "signal": 3, "55mhz": 3, "back": 3, "maxim": 3, "over": [3, 10], "sai": 3, "happen": 3, "chang": 3, "plot": 3, "capabl": [5, 7], "combin": [], "certain": 3, "ta": 7, "b": [5, 7], "tb": 7, "1e6": 7, "consist": 7, "each": 7, "coax": 7, "cabl": 7, "wire": 7, "1mhz": 7, "funciton": 7, "posibl": 7, "easi": 7, "6": 7, "180": 7, "impi": 7, "theta": 7, "pi": 7, "1a": 7, "1b": 7, "2a": 7, "2b": 7, "ct1": 7, "3": 7, "3a": 7, "3b": 7, "trl4": 7, "4a": 7, "4b": 7, "ct2": 7, "5j": 7, "ct3": 7, "ct4": 7, "duh": 7, "trl5": 7, "5a": 7, "5b": 7, "45e6": 7, "critic": 7, "1v": 7, "5v": 7, "previous": 10, "ground": [5, 10], "With": [3, 8, 10], "what": [3, 10], "introduct": [6, 8], "tutori": 8, "formal": 10, "attr1": 10, "val1": 10, "attr2": 10, "val2": 10, "abl": 10, "val": 10, "work": 10, "formul": 10, "want": 10, "loop": 10, "cancel": 10, "variou": [3, 8], "abil": 8, "incorpor": [5, 8], "pre": 2, "databas": 2, "clone": 2, "repositori": 2, "navig": 2, "re": 2, "plan": 2, "contribut": 2, "your": 2, "own": 2, "benefit": 2, "easili": 2, "access": 2, "adress": 2, "pythonpath": 2, "zshrc": 2, "export": 2, "softwar": [2, 3], "intend": 8, "audienc": 8, "experienc": 8, "engin": 8, "peopl": 8, "interest": 8, "circuitri": [3, 8], "field": 8, "willing": 8, "learn": 8, "apart": 3, "other": 3, "applic": 3, "cuq": 3, "know": 3, "analog": 3, "addit": 3, "eupl": 8, "licens": 8, "examin": 8, "almost": 8, "imagin": 8, "let": 3, "window": 3, "clear": 3, "insight": 3, "showcas": 5, "rfcoupler": 5, "trlpart1": 5, "041": 5, "017": 5, "500": 5, "trlpart2": 5, "trlpart3": 5, "trlpart4": 5, "trlpart5": 5, "tomas_icrh_linear_2017": 5, "vacuum": 5, "s2p": 5, "rlcleft": 5, "csval": 5, "cpval": 5, "caright": 5, "caval": 5, "matchingcircuit": 5, "tl4": 5, "tl5": 5, "endoflin": 5, "rloss": 5, "prematch": 5, "deprec": 10, "sinc": 10, "been": 10, "replac": 10, "kept": 10, "legaci": 10}, "objects": {"": [[10, 0, 0, "-", "pyRFtk"]], "pyRFtk": [[10, 0, 0, "-", "ConvertGeneral"], [10, 0, 0, "-", "ReadDictData"], [10, 0, 0, "-", "ReadTSF"], [10, 0, 0, "-", "S_from_VI"], [10, 0, 0, "-", "S_from_Y"], [10, 0, 0, "-", "S_from_Z"], [10, 0, 0, "-", "Y_from_S"], [10, 0, 0, "-", "Z_from_S"], [10, 0, 0, "-", "circuit"], [10, 0, 0, "-", "codebase"], [10, 0, 0, "-", "compareSs"], [10, 0, 0, "-", "config"], [10, 0, 0, "-", "findpath"], [10, 0, 0, "-", "getlines"], [10, 0, 0, "-", "maxfun"], [10, 0, 0, "-", "plotVSWs"], [10, 0, 0, "-", "printMatrices"], [10, 0, 0, "-", "resolveTLparams"], [10, 0, 0, "-", "rfArcObj"], [10, 0, 0, "-", "rfBase"], [10, 0, 0, "-", "rfCircuit"], [10, 0, 0, "-", "rfGTL"], [10, 0, 0, "-", "rfObject"], [10, 0, 0, "-", "rfRLC"], [10, 0, 0, "-", "rfTRL"], [10, 0, 0, "-", "str_dict"], [10, 0, 0, "-", "tictoc"], [10, 0, 0, "-", "whoami"]], "pyRFtk.ConvertGeneral": [[10, 1, 1, "", "ConvertGeneral"]], "pyRFtk.ReadDictData": [[10, 1, 1, "", "ReadDictData"], [10, 1, 1, "", "ReadDictString"]], "pyRFtk.ReadTSF": [[10, 1, 1, "", "ReadTSF"]], "pyRFtk.S_from_VI": [[10, 1, 1, "", "S_from_VI"]], "pyRFtk.S_from_Y": [[10, 1, 1, "", "S_from_Y"]], "pyRFtk.S_from_Z": [[10, 1, 1, "", "S_from_Z"]], "pyRFtk.Y_from_S": [[10, 1, 1, "", "Y_from_S"]], "pyRFtk.Z_from_S": [[10, 1, 1, "", "Z_from_S"]], "pyRFtk.circuit": [[10, 2, 1, "", "circuit"]], "pyRFtk.circuit.circuit": [[10, 3, 1, "", "Get_internalSmatrix"], [10, 3, 1, "", "Solution"], [10, 3, 1, "", "addblock"], [10, 3, 1, "", "connect"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "extS"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "listBlocks"], [10, 3, 1, "", "maxV"], [10, 3, 1, "", "set"], [10, 3, 1, "", "solve"], [10, 3, 1, "", "terminate"]], "pyRFtk.codebase": [[10, 1, 1, "", "list1dir"]], "pyRFtk.compareSs": [[10, 1, 1, "", "compareSs"]], "pyRFtk.config": [[10, 1, 1, "", "CleanUpLogFile"], [10, 1, 1, "", "fscale"], [10, 1, 1, "", "get_class_that_defined_method"], [10, 1, 1, "", "ident"], [10, 1, 1, "", "logident"], [10, 1, 1, "", "setLogLevel"]], "pyRFtk.findpath": [[10, 1, 1, "", "existspath"], [10, 1, 1, "", "findpath"]], "pyRFtk.getlines": [[10, 1, 1, "", "getlines"]], "pyRFtk.maxfun": [[10, 1, 1, "", "maxfun"]], "pyRFtk.plotVSWs": [[10, 1, 1, "", "plotVSWs"], [10, 1, 1, "", "scaleVSW"], [10, 1, 1, "", "strVSW"]], "pyRFtk.printMatrices": [[10, 1, 1, "", "printDB"], [10, 1, 1, "", "printM"], [10, 1, 1, "", "printMA"], [10, 1, 1, "", "printR"], [10, 1, 1, "", "printRI"], [10, 1, 1, "", "strM"]], "pyRFtk.resolveTLparams": [[10, 2, 1, "", "TLresolver"]], "pyRFtk.rfArcObj": [[10, 2, 1, "", "rfArcObj"]], "pyRFtk.rfArcObj.rfArcObj": [[10, 3, 1, "", "get1S"]], "pyRFtk.rfBase": [[10, 1, 1, "", "add_debug_code"], [10, 2, 1, "", "rfBase"]], "pyRFtk.rfBase.rfBase": [[10, 3, 1, "", "asstr"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "get1S"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "maxV"], [10, 3, 1, "", "set"], [10, 3, 1, "", "tsf2str"], [10, 3, 1, "", "write_tsf"]], "pyRFtk.rfCircuit": [[10, 2, 1, "", "rfCircuit"]], "pyRFtk.rfCircuit.rfCircuit": [[10, 3, 1, "", "Get_internalSmatrix"], [10, 3, 1, "", "Solution"], [10, 3, 1, "", "addblock"], [10, 3, 1, "", "connect"], [10, 3, 1, "", "deembed"], [10, 3, 1, "", "extS"], [10, 3, 1, "", "findObj"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "getpos"], [10, 3, 1, "", "listBlocks"], [10, 3, 1, "", "maxV"], [10, 3, 1, "", "resolve_xpos"], [10, 3, 1, "", "set"], [10, 3, 1, "", "solve"], [10, 3, 1, "", "terminate"]], "pyRFtk.rfGTL": [[10, 1, 1, "", "processGTL"], [10, 2, 1, "", "rfGTL"]], "pyRFtk.rfGTL.rfGTL": [[10, 3, 1, "", "copy"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "getSgtl"]], "pyRFtk.rfObject": [[10, 2, 1, "", "rfObject"]], "pyRFtk.rfObject.rfObject": [[10, 3, 1, "", "S_from_Y"], [10, 3, 1, "", "S_from_Z"], [10, 3, 1, "", "convert2newZbase"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "deembed"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "maxV"], [10, 3, 1, "", "process_kwargs"], [10, 3, 1, "", "read_tsf"], [10, 3, 1, "", "setS"], [10, 3, 1, "", "sortports"]], "pyRFtk.rfRLC": [[10, 2, 1, "", "rfRLC"]], "pyRFtk.rfRLC.rfRLC": [[10, 3, 1, "", "asstr"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "maxV"], [10, 3, 1, "", "set"]], "pyRFtk.rfTRL": [[10, 2, 1, "", "rfTRL"]], "pyRFtk.rfTRL.rfTRL": [[10, 3, 1, "", "VISWs"], [10, 3, 1, "", "asstr"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "getS"], [10, 3, 1, "", "maxV"], [10, 3, 1, "", "set"], [10, 3, 1, "", "solveVI"]], "pyRFtk.str_dict": [[10, 1, 1, "", "str_dict"]], "pyRFtk.tictoc": [[10, 1, 1, "", "tic"], [10, 1, 1, "", "toc"]], "pyRFtk.whoami": [[10, 1, 1, "", "whoami"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"toma": 4, "icrh": 4, "match": 4, "welcom": 8, "pyrftk": [8, 9, 10], "": [7, 8], "document": 8, "content": [8, 10], "indic": 8, "tabl": 8, "packag": 10, "submodul": 10, "convertgener": 10, "modul": 10, "readdictdata": 10, "readtsf": 10, "s_from_vi": 10, "s_from_i": 10, "s_from_z": 10, "y_from_": 10, "z_from_": 10, "circuit": [7, 10], "codebas": 10, "comparess": 10, "config": 10, "findpath": 10, "getlin": 10, "maxfun": 10, "plotvsw": 10, "printmatric": 10, "resolvetlparam": 10, "rf3dbhybrid": 10, "rfarcobj": 10, "rfbase": 10, "rfcircuit": 10, "rfgtl": 10, "rfobject": 10, "rfrlc": 10, "rftrl": 10, "str_dict": 10, "tictoc": 10, "whoami": 10, "usag": [], "instal": 2, "max": [], "voltag": [], "i": [], "f": [], "o": [], "distanc": [], "matrix": 7, "multipl": 7, "port": 7, "log": 7, "introduct": 3, "tutori": 6, "exampl": 1, "pip": 2, "sourc": 2, "depend": 2, "touchston": 5, "file": 5, "combin": 7, "deembed": 0}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Examples": [[1, "examples"]], "Installation": [[2, "installation"]], "Pip": [[2, "pip"]], "Source": [[2, "source"]], "Dependencies": [[2, "dependencies"]], "Introduction": [[3, "introduction"]], "TOMAS ICRH matching": [[4, "tomas-icrh-matching"]], "S-matrix and combining circuits": [[7, "s-matrix-and-combining-circuits"]], "Multiple ports and Logging": [[7, "multiple-ports-and-logging"]], "Welcome to pyRFtk\u2019s documentation!": [[8, "welcome-to-pyrftk-s-documentation"]], "Contents": [[8, "contents"]], "Indices and tables": [[8, "indices-and-tables"]], "pyRFtk": [[9, "pyrftk"]], "Touchstone files": [[5, "touchstone-files"]], "Tutorials": [[6, "tutorials"]], "Deembedding": [[0, "deembedding"]], "pyRFtk package": [[10, "pyrftk-package"]], "Submodules": [[10, "submodules"]], "pyRFtk.ConvertGeneral module": [[10, "module-pyRFtk.ConvertGeneral"]], "pyRFtk.ReadDictData module": [[10, "module-pyRFtk.ReadDictData"]], "pyRFtk.ReadTSF module": [[10, "module-pyRFtk.ReadTSF"]], "pyRFtk.S_from_VI module": [[10, "module-pyRFtk.S_from_VI"]], "pyRFtk.S_from_Y module": [[10, "module-pyRFtk.S_from_Y"]], "pyRFtk.S_from_Z module": [[10, "module-pyRFtk.S_from_Z"]], "pyRFtk.Y_from_S module": [[10, "module-pyRFtk.Y_from_S"]], "pyRFtk.Z_from_S module": [[10, "module-pyRFtk.Z_from_S"]], "pyRFtk.circuit module": [[10, "module-pyRFtk.circuit"]], "pyRFtk.codebase module": [[10, "module-pyRFtk.codebase"]], "pyRFtk.compareSs module": [[10, "module-pyRFtk.compareSs"]], "pyRFtk.config module": [[10, "module-pyRFtk.config"]], "pyRFtk.findpath module": [[10, "module-pyRFtk.findpath"]], "pyRFtk.getlines module": [[10, "module-pyRFtk.getlines"]], "pyRFtk.maxfun module": [[10, "module-pyRFtk.maxfun"]], "pyRFtk.plotVSWs module": [[10, "module-pyRFtk.plotVSWs"]], "pyRFtk.printMatrices module": [[10, "module-pyRFtk.printMatrices"]], "pyRFtk.resolveTLparams module": [[10, "module-pyRFtk.resolveTLparams"]], "pyRFtk.rf3dBHybrid module": [[10, "pyrftk-rf3dbhybrid-module"]], "pyRFtk.rfArcObj module": [[10, "module-pyRFtk.rfArcObj"]], "pyRFtk.rfBase module": [[10, "module-pyRFtk.rfBase"]], "pyRFtk.rfCircuit module": [[10, "module-pyRFtk.rfCircuit"]], "pyRFtk.rfGTL module": [[10, "module-pyRFtk.rfGTL"]], "pyRFtk.rfObject module": [[10, "module-pyRFtk.rfObject"]], "pyRFtk.rfRLC module": [[10, "module-pyRFtk.rfRLC"]], "pyRFtk.rfTRL module": [[10, "module-pyRFtk.rfTRL"]], "pyRFtk.str_dict module": [[10, "module-pyRFtk.str_dict"]], "pyRFtk.tictoc module": [[10, "module-pyRFtk.tictoc"]], "pyRFtk.whoami module": [[10, "module-pyRFtk.whoami"]], "Module contents": [[10, "module-pyRFtk"]]}, "indexentries": {"cleanuplogfile() (in module pyrftk.config)": [[10, "pyRFtk.config.CleanUpLogFile"]], "convertgeneral() (in module pyrftk.convertgeneral)": [[10, "pyRFtk.ConvertGeneral.ConvertGeneral"]], "get_internalsmatrix() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.Get_internalSmatrix"]], "get_internalsmatrix() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.Get_internalSmatrix"]], "readdictdata() (in module pyrftk.readdictdata)": [[10, "pyRFtk.ReadDictData.ReadDictData"]], "readdictstring() (in module pyrftk.readdictdata)": [[10, "pyRFtk.ReadDictData.ReadDictString"]], "readtsf() (in module pyrftk.readtsf)": [[10, "pyRFtk.ReadTSF.ReadTSF"]], "s_from_vi() (in module pyrftk.s_from_vi)": [[10, "pyRFtk.S_from_VI.S_from_VI"]], "s_from_y() (in module pyrftk.s_from_y)": [[10, "pyRFtk.S_from_Y.S_from_Y"]], "s_from_y() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.S_from_Y"]], "s_from_z() (in module pyrftk.s_from_z)": [[10, "pyRFtk.S_from_Z.S_from_Z"]], "s_from_z() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.S_from_Z"]], "solution() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.Solution"]], "solution() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.Solution"]], "tlresolver (class in pyrftk.resolvetlparams)": [[10, "pyRFtk.resolveTLparams.TLresolver"]], "visws() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.VISWs"]], "y_from_s() (in module pyrftk.y_from_s)": [[10, "pyRFtk.Y_from_S.Y_from_S"]], "z_from_s() (in module pyrftk.z_from_s)": [[10, "pyRFtk.Z_from_S.Z_from_S"]], "add_debug_code() (in module pyrftk.rfbase)": [[10, "pyRFtk.rfBase.add_debug_code"]], "addblock() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.addblock"]], "addblock() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.addblock"]], "asstr() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.asstr"]], "asstr() (pyrftk.rfrlc.rfrlc method)": [[10, "pyRFtk.rfRLC.rfRLC.asstr"]], "asstr() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.asstr"]], "circuit (class in pyrftk.circuit)": [[10, "pyRFtk.circuit.circuit"]], "comparess() (in module pyrftk.comparess)": [[10, "pyRFtk.compareSs.compareSs"]], "connect() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.connect"]], "connect() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.connect"]], "convert2newzbase() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.convert2newZbase"]], "copy() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.copy"]], "copy() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.copy"]], "copy() (pyrftk.rfgtl.rfgtl method)": [[10, "pyRFtk.rfGTL.rfGTL.copy"]], "copy() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.copy"]], "copy() (pyrftk.rfrlc.rfrlc method)": [[10, "pyRFtk.rfRLC.rfRLC.copy"]], "copy() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.copy"]], "deembed() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.deembed"]], "deembed() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.deembed"]], "existspath() (in module pyrftk.findpath)": [[10, "pyRFtk.findpath.existspath"]], "exts() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.extS"]], "exts() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.extS"]], "findobj() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.findObj"]], "findpath() (in module pyrftk.findpath)": [[10, "pyRFtk.findpath.findpath"]], "fscale() (in module pyrftk.config)": [[10, "pyRFtk.config.fscale"]], "get1s() (pyrftk.rfarcobj.rfarcobj method)": [[10, "pyRFtk.rfArcObj.rfArcObj.get1S"]], "get1s() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.get1S"]], "gets() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.getS"]], "gets() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.getS"]], "gets() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.getS"]], "gets() (pyrftk.rfgtl.rfgtl method)": [[10, "pyRFtk.rfGTL.rfGTL.getS"]], "gets() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.getS"]], "gets() (pyrftk.rfrlc.rfrlc method)": [[10, "pyRFtk.rfRLC.rfRLC.getS"]], "gets() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.getS"]], "getsgtl() (pyrftk.rfgtl.rfgtl method)": [[10, "pyRFtk.rfGTL.rfGTL.getSgtl"]], "get_class_that_defined_method() (in module pyrftk.config)": [[10, "pyRFtk.config.get_class_that_defined_method"]], "getlines() (in module pyrftk.getlines)": [[10, "pyRFtk.getlines.getlines"]], "getpos() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.getpos"]], "ident() (in module pyrftk.config)": [[10, "pyRFtk.config.ident"]], "list1dir() (in module pyrftk.codebase)": [[10, "pyRFtk.codebase.list1dir"]], "listblocks() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.listBlocks"]], "listblocks() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.listBlocks"]], "logident() (in module pyrftk.config)": [[10, "pyRFtk.config.logident"]], "maxv() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.maxV"]], "maxv() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.maxV"]], "maxv() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.maxV"]], "maxv() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.maxV"]], "maxv() (pyrftk.rfrlc.rfrlc method)": [[10, "pyRFtk.rfRLC.rfRLC.maxV"]], "maxv() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.maxV"]], "maxfun() (in module pyrftk.maxfun)": [[10, "pyRFtk.maxfun.maxfun"]], "module": [[10, "module-pyRFtk"], [10, "module-pyRFtk.ConvertGeneral"], [10, "module-pyRFtk.ReadDictData"], [10, "module-pyRFtk.ReadTSF"], [10, "module-pyRFtk.S_from_VI"], [10, "module-pyRFtk.S_from_Y"], [10, "module-pyRFtk.S_from_Z"], [10, "module-pyRFtk.Y_from_S"], [10, "module-pyRFtk.Z_from_S"], [10, "module-pyRFtk.circuit"], [10, "module-pyRFtk.codebase"], [10, "module-pyRFtk.compareSs"], [10, "module-pyRFtk.config"], [10, "module-pyRFtk.findpath"], [10, "module-pyRFtk.getlines"], [10, "module-pyRFtk.maxfun"], [10, "module-pyRFtk.plotVSWs"], [10, "module-pyRFtk.printMatrices"], [10, "module-pyRFtk.resolveTLparams"], [10, "module-pyRFtk.rfArcObj"], [10, "module-pyRFtk.rfBase"], [10, "module-pyRFtk.rfCircuit"], [10, "module-pyRFtk.rfGTL"], [10, "module-pyRFtk.rfObject"], [10, "module-pyRFtk.rfRLC"], [10, "module-pyRFtk.rfTRL"], [10, "module-pyRFtk.str_dict"], [10, "module-pyRFtk.tictoc"], [10, "module-pyRFtk.whoami"]], "plotvsws() (in module pyrftk.plotvsws)": [[10, "pyRFtk.plotVSWs.plotVSWs"]], "printdb() (in module pyrftk.printmatrices)": [[10, "pyRFtk.printMatrices.printDB"]], "printm() (in module pyrftk.printmatrices)": [[10, "pyRFtk.printMatrices.printM"]], "printma() (in module pyrftk.printmatrices)": [[10, "pyRFtk.printMatrices.printMA"]], "printr() (in module pyrftk.printmatrices)": [[10, "pyRFtk.printMatrices.printR"]], "printri() (in module pyrftk.printmatrices)": [[10, "pyRFtk.printMatrices.printRI"]], "processgtl() (in module pyrftk.rfgtl)": [[10, "pyRFtk.rfGTL.processGTL"]], "process_kwargs() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.process_kwargs"]], "pyrftk": [[10, "module-pyRFtk"]], "pyrftk.convertgeneral": [[10, "module-pyRFtk.ConvertGeneral"]], "pyrftk.readdictdata": [[10, "module-pyRFtk.ReadDictData"]], "pyrftk.readtsf": [[10, "module-pyRFtk.ReadTSF"]], "pyrftk.s_from_vi": [[10, "module-pyRFtk.S_from_VI"]], "pyrftk.s_from_y": [[10, "module-pyRFtk.S_from_Y"]], "pyrftk.s_from_z": [[10, "module-pyRFtk.S_from_Z"]], "pyrftk.y_from_s": [[10, "module-pyRFtk.Y_from_S"]], "pyrftk.z_from_s": [[10, "module-pyRFtk.Z_from_S"]], "pyrftk.circuit": [[10, "module-pyRFtk.circuit"]], "pyrftk.codebase": [[10, "module-pyRFtk.codebase"]], "pyrftk.comparess": [[10, "module-pyRFtk.compareSs"]], "pyrftk.config": [[10, "module-pyRFtk.config"]], "pyrftk.findpath": [[10, "module-pyRFtk.findpath"]], "pyrftk.getlines": [[10, "module-pyRFtk.getlines"]], "pyrftk.maxfun": [[10, "module-pyRFtk.maxfun"]], "pyrftk.plotvsws": [[10, "module-pyRFtk.plotVSWs"]], "pyrftk.printmatrices": [[10, "module-pyRFtk.printMatrices"]], "pyrftk.resolvetlparams": [[10, "module-pyRFtk.resolveTLparams"]], "pyrftk.rfarcobj": [[10, "module-pyRFtk.rfArcObj"]], "pyrftk.rfbase": [[10, "module-pyRFtk.rfBase"]], "pyrftk.rfcircuit": [[10, "module-pyRFtk.rfCircuit"]], "pyrftk.rfgtl": [[10, "module-pyRFtk.rfGTL"]], "pyrftk.rfobject": [[10, "module-pyRFtk.rfObject"]], "pyrftk.rfrlc": [[10, "module-pyRFtk.rfRLC"]], "pyrftk.rftrl": [[10, "module-pyRFtk.rfTRL"]], "pyrftk.str_dict": [[10, "module-pyRFtk.str_dict"]], "pyrftk.tictoc": [[10, "module-pyRFtk.tictoc"]], "pyrftk.whoami": [[10, "module-pyRFtk.whoami"]], "read_tsf() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.read_tsf"]], "resolve_xpos() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.resolve_xpos"]], "rfarcobj (class in pyrftk.rfarcobj)": [[10, "pyRFtk.rfArcObj.rfArcObj"]], "rfbase (class in pyrftk.rfbase)": [[10, "pyRFtk.rfBase.rfBase"]], "rfcircuit (class in pyrftk.rfcircuit)": [[10, "pyRFtk.rfCircuit.rfCircuit"]], "rfgtl (class in pyrftk.rfgtl)": [[10, "pyRFtk.rfGTL.rfGTL"]], "rfobject (class in pyrftk.rfobject)": [[10, "pyRFtk.rfObject.rfObject"]], "rfrlc (class in pyrftk.rfrlc)": [[10, "pyRFtk.rfRLC.rfRLC"]], "rftrl (class in pyrftk.rftrl)": [[10, "pyRFtk.rfTRL.rfTRL"]], "scalevsw() (in module pyrftk.plotvsws)": [[10, "pyRFtk.plotVSWs.scaleVSW"]], "set() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.set"]], "set() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.set"]], "set() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.set"]], "set() (pyrftk.rfrlc.rfrlc method)": [[10, "pyRFtk.rfRLC.rfRLC.set"]], "set() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.set"]], "setloglevel() (in module pyrftk.config)": [[10, "pyRFtk.config.setLogLevel"]], "sets() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.setS"]], "solve() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.solve"]], "solve() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.solve"]], "solvevi() (pyrftk.rftrl.rftrl method)": [[10, "pyRFtk.rfTRL.rfTRL.solveVI"]], "sortports() (pyrftk.rfobject.rfobject method)": [[10, "pyRFtk.rfObject.rfObject.sortports"]], "strm() (in module pyrftk.printmatrices)": [[10, "pyRFtk.printMatrices.strM"]], "strvsw() (in module pyrftk.plotvsws)": [[10, "pyRFtk.plotVSWs.strVSW"]], "str_dict() (in module pyrftk.str_dict)": [[10, "pyRFtk.str_dict.str_dict"]], "terminate() (pyrftk.circuit.circuit method)": [[10, "pyRFtk.circuit.circuit.terminate"]], "terminate() (pyrftk.rfcircuit.rfcircuit method)": [[10, "pyRFtk.rfCircuit.rfCircuit.terminate"]], "tic() (in module pyrftk.tictoc)": [[10, "pyRFtk.tictoc.tic"]], "toc() (in module pyrftk.tictoc)": [[10, "pyRFtk.tictoc.toc"]], "tsf2str() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.tsf2str"]], "whoami() (in module pyrftk.whoami)": [[10, "pyRFtk.whoami.whoami"]], "write_tsf() (pyrftk.rfbase.rfbase method)": [[10, "pyRFtk.rfBase.rfBase.write_tsf"]]}})